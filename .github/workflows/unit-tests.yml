# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci

on:
  pull_request:
    branches: 
      - '*'
    paths:
    - '**.py'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --cache-clear
    - name: Create coverage file
      run: |
        if [ -f .ignorecoveragerc ]; then pytest --cache-clear --cov=app --cov-config=.ignorecoveragerc test/ > pytest-coverage.txt; else pytest --cov=app test/; fi
    - name: Publish coverage results
      uses: coroo/pytest-coverage-commentator@v1.0.2
    - name: Create detail test coverage
      run: |
        if [ -f .ignorecoveragerc ]; then pytest --cache-clear --cov=app --cov-config=.ignorecoveragerc --cov-report html test/; else pytest --cov=app test/; fi
    - name: Store pytest coverage
      uses: actions/upload-artifact@v2
      with:
        name: pytest-coverage-artifact
        path: |
          htmlcov
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
